Given an array arr[] denoting heights of N towers and a positive integer K, you have to modify the height of each tower either by increasing or decreasing them by K only once. After modifying, height should be a non-negative integer. 
Find out the minimum possible difference of the height of shortest and longest towers after you have modified each tower.

You can find a slight modification of the problem here.
Note: It is compulsory to increase or decrease (if possible) by K to each tower.

Input:
K = 2, N = 4
Arr[] = {1, 5, 8, 10}
Output:
5
Explanation:
The array can be modified as 
{3, 3, 6, 8}. The difference between 
the largest and the smallest is 8-3 = 5.


int getMinDiff(int arr[], int n, int k) {
        // code here
        sort(arr,arr+n);
        
        int ans = arr[n-1]-arr[0];
        int mn = arr[0];
        int mx = arr[n-1];
        for(int i = 0;i<n-1;i++){
            if(arr[i+1]-k<0)continue;
            mn = min(arr[0]+k,arr[i+1]-k);
            mx = max(arr[n-1]-k,arr[i]+k);
            ans = min(ans,mx-mn);
        }
        return ans;
    }
