Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.

A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:

0 <= i < j < nums.length
|nums[i] - nums[j]| == k
Notice that |val| denotes the absolute value of val.

 

Example 1:

Input: nums = [3,1,4,1,5], k = 2
Output: 2
Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
Although we have two 1s in the input, we should only return the number of unique pairs.

Input: nums = [1,2,3,4,5], k = 1
Output: 4
Explanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).


int findPairs(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        int ans = 0,j=1,i=0,n = nums.size();
        while(i<n&&j<n){
            if(i==j||nums[j]-nums[i]<k) j++;
            else{
                if(nums[j]-nums[i]==k){
                    ans++;
                    j++;
                    while(j<n&&nums[j]==nums[j-1]){
                        j++;
                    }
                    if(j==n)return ans;
                    j--;
                }
                i++;
                while(i<j&&nums[i]==nums[i-1]){
                    i++;
                }
            }
        }
        return ans;
    }
